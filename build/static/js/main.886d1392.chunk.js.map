{"version":3,"sources":["component/new-task-panel/index.js","component/new-task-panel/newTaskPanel.js","component/filter-tasks-panel/index.js","component/filter-tasks-panel/filterTasksPanel.js","component/all-tasks/index.js","component/all-tasks/allTasks.js","component/service/index.js","component/service/service.js","component/app/index.js","component/app/app.js","index.js"],"names":["NewTaskPanel","state","label","date","Date","toLocaleDateString","err","submitTask","e","preventDefault","length","setState","props","onLabelText","changeLabel","target","value","this","className","onSubmit","type","id","placeholder","onChange","Component","FilterTasksPanel","buttons","name","all","finished","unfinished","filter","onFilterChange","map","clazz","key","onClick","AllTasks","Tasks","Todo","deleteTask","checkItem","item","checked","classChecked","defaultChecked","ServiseStorage","oldItems","JSON","parse","localStorage","getItem","console","log","items","obj","stringify","setItem","Todos","push","newItems","alert","allItems","itemIdx","findIndex","el","splice","App","serviseStorage","keyItem","Math","random","createTodoItem","text","addItem","newItem","Register","allTasks","undefined","AllItemsStorage","DeleteTask","checkTask","checkedCount","unCheckedCount","allTask","visibleItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.886d1392.chunk.js","sourcesContent":["import NewTaskPanel from \"./newTaskPanel\";\r\n\r\nexport default NewTaskPanel","import React,{Component} from \"react\";\r\nimport \"./newTaskPanel.sass\"\r\n\r\nexport default class NewTaskPanel extends Component{\r\n    state = {\r\n        label: \"\",\r\n        date:`${new Date().toLocaleDateString()}`,\r\n        err: \"err-new-task\"\r\n    };\r\n    submitTask = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.label.length < 3) {\r\n            this.setState({\r\n                err: \"err-new-task visible\"\r\n            })\r\n        } else {\r\n            this.props.onLabelText(this.state.label, this.state.date);\r\n            this.setState({\r\n                label: \"\",\r\n                err: \"err-new-task\"\r\n            })\r\n        }\r\n\r\n    };\r\n    changeLabel = (e) => {\r\n        if (e.target.value.length >= 3) {\r\n            this.setState({\r\n                label: e.target.value,\r\n                err: \"err-new-task\"\r\n            })\r\n        }else {\r\n            this.setState({\r\n                label: e.target.value,\r\n                err: \"err-new-task visible\"\r\n            })\r\n        }\r\n    };\r\n    render() {\r\n        const {label, err} = this.state;\r\n        return (\r\n            <div className=\"new-task todo-padding\">\r\n                <form className=\"flex-row bg-form-and-input\"\r\n                    onSubmit={this.submitTask}>\r\n                    <input type=\"text\" id=\"todo-new-task\" placeholder=\"Add a new task...\"\r\n                           value={label}\r\n                    onChange={this.changeLabel}/>\r\n                    <button type=\"submit\" id=\"todo-button-new-task\" className=\"button\">Go</button>\r\n                </form>\r\n                <div className={err}>Few characters</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import FilterTasksPanel from \"./filterTasksPanel\";\r\n\r\nexport default FilterTasksPanel","import React,{Component} from \"react\";\r\nimport \"./filterTasksPanel.sass\"\r\n\r\nexport default class FilterTasksPanel extends Component{\r\n    buttons = [\r\n        {name: \"all\", label: \"all task\"},\r\n        {name: \"finished\", label: \"finished\"},\r\n        {name: \"unfinished\", label: \"unfinished\"},\r\n    ];\r\n    render() {\r\n        const {all, finished, unfinished,\r\n            filter,\r\n            onFilterChange} = this.props;\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-active' : 'position-counter';\r\n\r\n            switch (name) {\r\n                case \"all\":\r\n                    return (\r\n                        <div key={name} className=\"position-counter\">\r\n                            <button type=\"submit\" className={`button ${clazz}`}\r\n                                    onClick={() => onFilterChange(name)}>{label}</button>\r\n                            <div className=\"counter\">{all}</div>\r\n                        </div>\r\n                    );\r\n                case \"finished\":\r\n                    return (\r\n                        <div key={name} className=\"position-counter\">\r\n                            <button type=\"submit\" className={`button ${clazz}`}\r\n                                    onClick={() => onFilterChange(name)}>{label}</button>\r\n                            <div className=\"counter\">{finished}</div>\r\n                        </div>\r\n                    );\r\n                case \"unfinished\":\r\n                    return (\r\n                        <div key={name} className=\"position-counter\">\r\n                            <button type=\"submit\" className={`button ${clazz}`}\r\n                                    onClick={() => onFilterChange(name)}>{label}</button>\r\n                            <div className=\"counter\">{unfinished}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n            });\r\n        return (\r\n            <div className=\"task-filter-box todo-padding\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import AllTasks from \"./allTasks\";\r\n\r\nexport default AllTasks","import React, {Component} from \"react\";\r\nimport \"./allTasks.sass\"\r\n\r\n// const AllTasks = ({Todo}) => {\r\n//\r\n//     const Tasks = Todo.map((item) => {\r\n//         const {id, label, date} = item;\r\n//         return (\r\n//             <div key={id} className=\"task-box flex-row todo-padding\">\r\n//                 <label className=\"checkbox\">\r\n//                     <input type=\"checkbox\" className=\"c1\"/>\r\n//                     <span className=\"checkbox-span\"></span>\r\n//                 </label>\r\n//                 <div className=\"flex-column task-detail-box\">\r\n//                     <div className=\"delete-task\"></div>\r\n//                     <span type=\"text\" className=\"task title\" onClick={}>{label}</span>\r\n//                 </div>\r\n//                 <p className=\"date\">{date}</p>\r\n//             </div>\r\n//         )\r\n//     });\r\n//     return (\r\n//         <>\r\n//             {Tasks}\r\n//         </>\r\n//     )\r\n//\r\n// };\r\n//\r\n// export default AllTasks\r\n\r\nexport default class AllTasks extends Component{\r\n\r\n    Tasks = () => {\r\n        const {Todo, deleteTask, checkItem} = this.props;\r\n\r\n        return (\r\n            Todo.map((item) => {\r\n                const {id, label, date, checked} = item;\r\n\r\n                let classChecked = \"task title\";\r\n                if (checked) {\r\n                    classChecked += \" checked-task\"\r\n                }\r\n\r\n                return (\r\n                    <div key={id} className=\"task-box flex-row todo-padding\">\r\n                        <label className=\"checkbox\">\r\n                            <input type=\"checkbox\" className=\"c1\"\r\n                                   defaultChecked={checked}\r\n                                   onClick={() => checkItem(id)}/>\r\n                            <span className=\"checkbox-span\"></span>\r\n                        </label>\r\n                        <div className=\"flex-column task-detail-box\">\r\n                            <div className=\"delete-task\" onClick={() => deleteTask(id)}></div>\r\n                            <span type=\"text\" className={classChecked}>{label}</span>\r\n                        </div>\r\n                        <p className=\"date\">{date}</p>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.Tasks()}\r\n            </>\r\n        )\r\n    }\r\n};","import ServiseStorage from \"./service.js\";\r\n\r\nexport default ServiseStorage","// 1. record\r\n// 2. all task\r\n// 3. delete\r\n// 4. changes\r\nexport default class ServiseStorage {\r\n    Register(item) {\r\n        try {\r\n            const oldItems = JSON.parse(localStorage.getItem(\"tasks\"));\r\n            if (oldItems == null) {\r\n                console.log('ПУСТО');\r\n                const items = {\"Todos\": [item]};\r\n                const obj = JSON.stringify(items);\r\n\r\n                localStorage.setItem(`tasks`, obj)\r\n            } else {\r\n\r\n                oldItems.Todos.push(item);\r\n                const newItems = JSON.stringify(oldItems);\r\n\r\n                localStorage.setItem(`tasks`, newItems)\r\n            }\r\n        } catch (e) {\r\n            if (e === \"QUOTA_EXCEEDED_ERR\") {\r\n                alert('Превышен лимит');\r\n            }\r\n        }\r\n    }\r\n    AllItemsStorage() {\r\n        try {\r\n            const allItems = JSON.parse(localStorage.getItem(\"tasks\"));\r\n\r\n            const {Todos} = allItems;\r\n            return Todos\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    DeleteTask (id){\r\n            const allItems = JSON.parse(localStorage.getItem(\"tasks\"));\r\n\r\n            const itemIdx = allItems.Todos.findIndex((el) => el.id === id);\r\n            allItems.Todos.splice(itemIdx, 1);\r\n            const obj = JSON.stringify(allItems);\r\n\r\n            localStorage.setItem(`tasks`, obj)\r\n    }\r\n    checkTask (id){\r\n        const allItems = JSON.parse(localStorage.getItem(\"tasks\"));\r\n\r\n        const itemIdx = allItems.Todos.findIndex((el) => el.id === id);\r\n        allItems.Todos[itemIdx].checked = !allItems.Todos[itemIdx].checked;\r\n        const obj = JSON.stringify(allItems);\r\n\r\n        localStorage.setItem(`tasks`, obj)\r\n    }\r\n}","import App from \"./app\";\r\n\r\nexport default App","import React,{Component} from \"react\";\r\nimport NewTaskPanel from \"../new-task-panel\";\r\nimport FilterTasksPanel from \"../filter-tasks-panel\";\r\nimport AllTasks from \"../all-tasks\";\r\n\r\nimport ServiseStorage from \"../service\"\r\n\r\n\r\nimport \"./app.sass\"\r\n\r\n\r\nexport default class App extends Component{\r\n    serviseStorage = new ServiseStorage();\r\n\r\n    keyItem = Math.random();\r\n\r\n    state = {\r\n      Todo: [],\r\n      filter: \"finished\"\r\n    };\r\n    createTodoItem = (text, date) => {\r\n        return {\r\n            id: this.keyItem++,\r\n            label:text,\r\n            date:date,\r\n            checked: false}\r\n    };\r\n    addItem = (text, date) => {\r\n        const newItem = this.createTodoItem(text, date);\r\n        this.serviseStorage.Register(newItem);\r\n        this.allTasks();\r\n    };\r\n    allTasks = () => {\r\n        if (this.serviseStorage.AllItemsStorage() === undefined){\r\n            this.setState({Todo:[]})\r\n        } else {\r\n            this.setState({Todo:this.serviseStorage.AllItemsStorage()})\r\n        }\r\n    };\r\n    deleteTask = (id) => {\r\n        this.serviseStorage.DeleteTask(id);\r\n        this.allTasks()\r\n    };\r\n    checkItem = (id) => {\r\n        this.serviseStorage.checkTask(id);\r\n        this.allTasks()\r\n    };\r\n    componentDidMount() {\r\n        this.allTasks()\r\n    }\r\n\r\n    filter = (items, filter) => {\r\n        switch (filter) {\r\n            case \"all\":\r\n                return items;\r\n            case \"unfinished\":\r\n                return items.filter((item) => !item.checked);\r\n            case \"finished\":\r\n                return items.filter((item) => item.checked);\r\n            default:\r\n                return items\r\n        }\r\n    };\r\n    onFilterChange = (filter) =>{\r\n        this.setState({filter})\r\n    };\r\n    render() {\r\n        const {Todo, filter} = this.state;\r\n\r\n        const checkedCount = Todo\r\n            .filter((el) => el.checked).length;\r\n        const unCheckedCount = Todo.length - checkedCount;\r\n        const allTask = checkedCount + unCheckedCount;\r\n\r\n        const visibleItems = this.filter( this.state.Todo, filter);\r\n\r\n        return(\r\n            <div className=\"wrapper\">\r\n                <div className=\"flex-column todo-box\">\r\n                    <div className=\"flex-column bg-list todo-height bg-box__width__radius\">\r\n                        <NewTaskPanel Todo={this.state.Todo} onLabelText={this.addItem}/>\r\n                        <FilterTasksPanel\r\n                            finished={checkedCount}\r\n                            unfinished={unCheckedCount}\r\n                            all={allTask}\r\n                            filter={filter}\r\n                            onFilterChange={this.onFilterChange}/>\r\n                        <div className=\"black-line\"></div>\r\n                        <AllTasks Todo={visibleItems}\r\n                                  deleteTask={this.deleteTask}\r\n                                  checkItem={this.checkItem}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import \"reset-css\"\nimport \"normalize.css\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/app';\n\n\nReactDOM.render(<App />, document.getElementById('todo'));\n\n"],"sourceRoot":""}